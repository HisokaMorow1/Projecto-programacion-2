#include <allegro.h>
#include <stdlib.h>
#include <stdio.h>
#include <time.h>
#include <string.h>
#define MAXANCHO 640
#define MAXLARGO 480
#define largo 10
#define MAXMANCHO 32
#define MAXMALTO 24

struct jugador
{
    char nombre[largo];
    int puntaje;
};
void limpiar();
void moveBall();
void p1Move();
void p2Move();
void startNew();
void checkWin(struct jugador jugadores[2]);
void setupGame();
void mapa();
void dibujamapa(BITMAP *bloque,BITMAP *bloque2);
void bloqueduro();
char mapita[MAXANCHO][MAXLARGO];
BITMAP *bmp;
BITMAP *buffer;
BITMAP *bloque;
BITMAP *bloque2;
BITMAP *mouse1;
BITMAP *fondo;
BITMAP *fondo2;
BITMAP *fondo3;
BITMAP *fondo4;

int main()
{	

	struct jugador jugadores[2];
    allegro_init();
    install_keyboard();
    install_mouse();
    set_color_depth(32);
    set_gfx_mode( GFX_AUTODETECT_WINDOWED, 640, 480, 0, 0);
    buffer = create_bitmap(640,480);
    
    mouse1 = load_bitmap("cursor.bmp",NULL);
    fondo = load_bitmap("inicio.bmp",NULL);
    fondo2 = load_bitmap("comenzar.bmp",NULL);
    fondo3= load_bitmap("score.bmp",NULL);
    fondo4 = load_bitmap("salir.bmp",NULL);
    bool salida = false;
    while(!salida)
    {
    	if (mouse_x > 270 && mouse_x < 344 && mouse_y > 275 && mouse_y < 363)
    	{
    		blit(fondo2,buffer,0,0,0,0,640,480);
    		if (mouse_b & 1)
    		{
    			position_mouse(641,481);
    			scare_mouse();
    			salida = true;
    			clear(buffer);
    			setupGame();
			}
		}
		else if (mouse_x > 244 && mouse_x < 290 && mouse_y > 285 && mouse_y < 399)
		{
			blit(fondo3,buffer,0,0,0,0,640,480);
    		if (mouse_b & 1)
    		{
    			salida = true;
    			return 0;
			}
		}
		else if (mouse_x > 242 && mouse_x < 283 && mouse_y > 425 && mouse_y < 440)
		{
			blit(fondo4,buffer,0,0,0,0,640,480);
    		if (mouse_b & 1)
    		{
    			salida = true;
    			limpiar();
    			return 0;
			}
		}
		else blit(fondo,buffer,0,0,0,0,640,480);
		scare_mouse();
		masked_blit(mouse1,buffer,0,0,mouse_x,mouse_y,270,397);
		blit(buffer,screen,0,0,0,0,640,480);
	}
    setupGame();
    mapa();
    bloque = load_bitmap("bloque3.bmp",NULL);
	bloque2 = load_bitmap("bloque2.bmp",NULL);
    dibujamapa(bloque,bloque2);
    strcpy(jugadores[0].nombre,"Gano el Jugador 1");
    strcpy(jugadores[1].nombre,"Gano el Jugador 2");
    while( !key[KEY_ESC])
	{
	    p1Move();
        p2Move();
        moveBall();
        checkWin(jugadores);
    }    
    limpiar();
    return 0;
}
END_OF_MAIN();

int ball_x = 320;
int ball_y = 240;

int ball_tempX = 320;
int ball_tempY = 240;

int p1_x = 20;
int p1_y = 210;

int p1_tempX = 20;
int p1_tempY = 210;

int p2_x = 609;
int p2_y = 210;

int p2_tempX = 609;
int p2_tempY = 210;

time_t secs;    
int dir;   
void moveBall()
{

    ball_tempX = ball_x;
    ball_tempY = ball_y;

    if (dir == 1 && ball_x > 5 && ball_y > 25){
     
         if( ball_x == p1_x + 15 && ball_y >= p1_y && ball_y <= p1_y + 60){
                  dir = rand()% 2 + 3;
         }else{    
                 --ball_x;
                 --ball_y;
         }    
              
    } else if (dir == 2 && ball_x > 5 && ball_y < 455){

         if( ball_x == p1_x + 15 && ball_y >= p1_y && ball_y <= p1_y + 60){
                  dir = rand()% 2 + 3;
         }else{    
                 --ball_x;
                 ++ball_y;
         }

    } else if (dir == 3 && ball_x < 635 && ball_y > 25){

         if( ball_x + 5 == p2_x && ball_y >= p2_y && ball_y <= p2_y + 60){
                  dir = rand()% 2 + 1;
         }else{    
                 ++ball_x;
                 --ball_y;
         }

    } else if (dir == 4 && ball_x < 635 && ball_y < 455){

         if( ball_x + 5 == p2_x && ball_y >= p2_y && ball_y <= p2_y + 60){
                  dir = rand()% 2 + 1;
         }else{    
                 ++ball_x;
                 ++ball_y;
         }

    } else { 

        if (dir == 1 || dir == 3)    ++dir;
        else if (dir == 2 || dir == 4)    --dir;

    }
	int auxX,auxY;
	auxX=ball_x/20;
	auxY=ball_y/20;
	if(mapita[auxY][auxX] =='a')
	{
		mapita[auxY][auxX] = ' ';	
		dibujamapa(bloque,bloque2);
	}   
    
    acquire_screen();
    circlefill ( buffer, ball_tempX, ball_tempY, 5, makecol( 0, 0, 0));
    circlefill ( buffer, ball_x, ball_y, 5, makecol( 128, 255, 0));
    draw_sprite( screen, buffer, 0, 0);
    release_screen();
    
    rest(1);

}    

void p1Move()
{
 
    p1_tempY = p1_y;
 
    if( key[KEY_W] && p1_y > 20){
     
        --p1_y;
              
    } else if( key[KEY_S] && p1_y < 400){
     
        ++p1_y;
              
    }     
    
    acquire_screen();
    rectfill( buffer, p1_tempX, p1_tempY, p1_tempX + 10, p1_tempY + 60, makecol ( 0, 0, 0));
    rectfill( buffer, p1_x, p1_y, p1_x + 10, p1_y + 60, makecol ( 0, 0, 255));
    release_screen();
          
}  

void p2Move()
{
 
    p2_tempY = p2_y;
 
    if( key[KEY_UP] && p2_y > 20){
     
        --p2_y;
              
    } else if( key[KEY_DOWN] && p2_y < 400){
     
        ++p2_y;
              
    }     
    
    acquire_screen();
    rectfill( buffer, p2_tempX, p2_tempY, p2_tempX + 10, p2_tempY + 60, makecol ( 0, 0, 0));
    rectfill( buffer, p2_x, p2_y, p2_x + 10, p2_y + 60, makecol ( 0, 0, 255));
    release_screen();
          
}    

void startNew()
{

    clear_keybuf();
    readkey();
    clear_to_color( buffer, makecol( 0, 0, 0));
    ball_x = 320;
    ball_y = 240;

    p1_x = 20;
    p1_y = 210;

    p2_x = 609;
    p2_y = 210;
    
	dibujamapa(bloque,bloque2);
}    

void checkWin(struct jugador jugadores[2])
{

    if ( ball_x < 20){
        textout_ex( screen, font, jugadores[1].nombre, 300, 240, makecol( 255, 0, 0), makecol( 0, 0, 0)); 
        startNew();
    } else if ( ball_x > 612){
        textout_ex( screen, font, jugadores[0].nombre, 300, 240, makecol( 255, 0, 0), makecol( 0, 0, 0)); 
        startNew();
    }    
   
}    

void setupGame()
{
 
    acquire_screen();
    rectfill( buffer, p1_x, p1_y, p1_x + 10, p1_y + 60, makecol ( 0, 0, 255));
    rectfill( buffer, p2_x, p2_y, p2_x + 10, p2_y + 60, makecol ( 0, 0, 255));  
    circlefill ( buffer, ball_x, ball_y, 5, makecol( 128, 255, 0));
    draw_sprite( screen, buffer, 0, 0);
    release_screen();
    
    time(&secs);
    srand( (unsigned int)secs);
    dir = rand() % 4 + 1;
            
}    

void mapa()
{
	FILE *mapFile;
	int i, j;
	char aux;
	if((mapFile = fopen("mapa.txt", "r")) == NULL)
	{
		printf("Error al abrir archivo");
		return;
	}
	for (i = 0; i < MAXMALTO; i++)
	{
		for (j = 0; j < MAXMANCHO; j++)
  		{
		  	fscanf(mapFile, "%c", &mapita[i][j]);
		}
		
		fscanf(mapFile, "%c", &aux);
	}
	fclose(mapFile);
}

void dibujamapa(BITMAP *bloque,BITMAP *bloque2)
{
	int i,j;
	for(i = 0; i < MAXMALTO; i++)
	{
		for(j = 0; j < MAXMANCHO; j++)
		{
			if (mapita[i][j]=='x')
			{	
				draw_sprite(buffer,bloque,20*j,20*i);
			}
			if(mapita[i][j]=='a')
			{
				draw_sprite(buffer,bloque2,20*j,20*i);
			}
		}	
			
	}
		
}

void limpiar()
{
	destroy_bitmap(buffer);
	destroy_bitmap(mouse1);
	destroy_bitmap(fondo);
	destroy_bitmap(fondo2);
	destroy_bitmap(fondo3);
	destroy_bitmap(fondo4);
	
}